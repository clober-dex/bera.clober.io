/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeometricPriceBook,
  GeometricPriceBookInterface,
} from "../../contracts/GeometricPriceBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "a_",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "r_",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "errorCode",
        type: "uint256",
      },
    ],
    name: "CloberError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "priceIndex",
        type: "uint16",
      },
    ],
    name: "indexToPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPriceIndex",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundingUp",
        type: "bool",
      },
    ],
    name: "priceToIndex",
    outputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "correctedPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceUpperBound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type GeometricPriceBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeometricPriceBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GeometricPriceBook__factory extends ContractFactory {
  constructor(...args: GeometricPriceBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    a_: BigNumberish,
    r_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<GeometricPriceBook> {
    return super.deploy(a_, r_, overrides || {}) as Promise<GeometricPriceBook>;
  }
  override getDeployTransaction(
    a_: BigNumberish,
    r_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(a_, r_, overrides || {});
  }
  override attach(address: string): GeometricPriceBook {
    return super.attach(address) as GeometricPriceBook;
  }
  override connect(signer: Signer): GeometricPriceBook__factory {
    return super.connect(signer) as GeometricPriceBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeometricPriceBookInterface {
    return new utils.Interface(_abi) as GeometricPriceBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeometricPriceBook {
    return new Contract(address, _abi, signerOrProvider) as GeometricPriceBook;
  }
}
