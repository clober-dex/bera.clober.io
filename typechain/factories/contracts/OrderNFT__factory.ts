/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrderNFT, OrderNFTInterface } from "../../contracts/OrderNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "canceler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "errorCode",
        type: "uint256",
      },
    ],
    name: "CloberError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "changeBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newContractURI",
        type: "string",
      },
    ],
    name: "changeContractURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "decodeId",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBid",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "priceIndex",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
        ],
        internalType: "struct OrderKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isBid",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "priceIndex",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
        ],
        internalType: "struct OrderKey",
        name: "orderKey",
        type: "tuple",
      },
    ],
    name: "encodeId",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "market_",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "market",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "onBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "onMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001e1d38038062001e1d833981016040819052620000349162000069565b6001600160a01b039182166080521660a052620000a1565b80516001600160a01b03811681146200006457600080fd5b919050565b600080604083850312156200007d57600080fd5b62000088836200004c565b915062000098602084016200004c565b90509250929050565b60805160a051611d56620000c760003960006107ca015260006110760152611d566000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80636c0360eb116100ee578063a22cb46511610097578063c87b56dd11610071578063c87b56dd14610355578063dc20c6fa14610368578063e8a3d48514610388578063e985e9c51461039057600080fd5b8063a22cb4651461031c578063b88d4fde1461032f578063c776d5831461034257600080fd5b806380f55605116100c857806380f55605146102f95780638da5cb5b1461030c57806395d89b411461031457600080fd5b80636c0360eb146102bd5780636ee5741a146102c557806370a08231146102d857600080fd5b806323b872dd116101505780634af2c2af1161012a5780634af2c2af146102845780635699b904146102975780636352211e146102aa57600080fd5b806323b872dd1461024b57806339a0c6f91461025e57806342842e0e1461027157600080fd5b8063081812fc11610181578063081812fc146101fa578063095ea7b3146102255780630f632fd31461023857600080fd5b806301ffc9a7146101a85780630513fc8b146101d057806306fdde03146101e5575b600080fd5b6101bb6101b63660046114c1565b6103cc565b60405190151581526020015b60405180910390f35b6101e36101de3660046114de565b610469565b005b6101ed6104fa565b6040516101c79190611547565b61020d6102083660046114de565b610588565b6040516001600160a01b0390911681526020016101c7565b6101e361023336600461156f565b6105e0565b6101e361024636600461156f565b610690565b6101e361025936600461159b565b61072c565b6101e361026c3660046116b1565b610761565b6101e361027f36600461159b565b6107a4565b6101e36102923660046116e6565b6107bf565b6101e36102a53660046116b1565b610994565b61020d6102b83660046114de565b6109d3565b6101ed610a0b565b6101e36102d3366004611781565b610a18565b6102eb6102e63660046117f9565b610ab9565b6040519081526020016101c7565b60045461020d906001600160a01b031681565b61020d610b1a565b6101ed610b29565b6101e361032a36600461182b565b610b36565b6101e361033d366004611860565b610bce565b6102eb6103503660046118e0565b610c0a565b6101ed6103633660046114de565b610c15565b61037b6103763660046114de565b610cab565b6040516101c79190611932565b6101ed610cd1565b6101bb61039e366004611959565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061042f57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061046357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6004546001600160a01b0316331461049c57604051630e92930560e11b8152600060048201526024015b60405180910390fd5b60006104a7826109d3565b90506104b581600084610cde565b6104be81610d47565b60405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000805461050790611992565b80601f016020809104026020016040519081016040528092919081815260200182805461053390611992565b80156105805780601f1061055557610100808354040283529160200191610580565b820191906000526020600020905b81548152906001019060200180831161056357829003601f168201915b505050505081565b6000818161059582610d78565b6001600160a01b0316036105bf57604051630e92930560e11b8152600e6004820152602401610493565b6000838152600660205260409020546001600160a01b031691505b50919050565b60006105eb826109d3565b9050806001600160a01b0316836001600160a01b03160361062257604051630e92930560e11b815260006004820152602401610493565b336001600160a01b0382161480159061065f57506001600160a01b038116600090815260076020908152604080832033845290915290205460ff16155b1561068057604051630e92930560e11b815260006004820152602401610493565b61068b818484610cde565b505050565b6004546001600160a01b031633146106be57604051630e92930560e11b815260006004820152602401610493565b6001600160a01b0382166106e757604051630e92930560e11b8152600481810152602401610493565b6106f082610dfc565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6107363382610e5a565b61075657604051630e92930560e11b815260006004820152602401610493565b61068b838383610ed9565b3361076a611035565b6001600160a01b03161461079457604051630e92930560e11b815260006004820152602401610493565b60026107a08282611a14565b5050565b61068b83838360405180602001604052806000815250610bce565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461080b57604051630e92930560e11b815260006004820152602401610493565b60008267ffffffffffffffff811115610826576108266115dc565b60405190808252806020026020018201604052801561087157816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816108445790505b50905060005b83811015610910576108a18686868481811061089557610895611ad4565b90506020020135610e5a565b6108c157604051630e92930560e11b815260006004820152602401610493565b6108e28585838181106108d6576108d6611ad4565b90506020020135610cab565b8282815181106108f4576108f4611ad4565b60200260200101819052508061090990611b00565b9050610877565b50600480546040517fdfdc93880000000000000000000000000000000000000000000000000000000081526001600160a01b039091169163dfdc93889161095b918691869101611b19565b600060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b505050505050505050565b3361099d611035565b6001600160a01b0316146109c757604051630e92930560e11b815260006004820152602401610493565b60036107a08282611a14565b6000806109df83610d78565b90506001600160a01b03811661046357604051630e92930560e11b815260006004820152602401610493565b6002805461050790611992565b6004546001600160a01b031615610a4557604051630e92930560e11b815260006004820152602401610493565b6001600160a01b038116610a6e57604051630e92930560e11b8152600481810152602401610493565b6000610a7a8482611a14565b506001610a878382611a14565b506004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03929092169190911790555050565b60006001600160a01b038216610ae457604051630e92930560e11b8152600481810152602401610493565b6001600160a01b03821660009081526005602052604090205480610b085780610b13565b610b13600182611b93565b9392505050565b6000610b24611035565b905090565b6001805461050790611992565b6001600160a01b0382163303610b6257604051630e92930560e11b815260006004820152602401610493565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610bd83383610e5a565b610bf857604051630e92930560e11b815260006004820152602401610493565b610c04848484846110e3565b50505050565b60006104638261111a565b6060816000610c2382610d78565b6001600160a01b031603610c4d57604051630e92930560e11b8152600e6004820152602401610493565b600060028054610c5c90611992565b905011610c785760405180602001604052806000815250610b13565b6002610c8384611133565b604051602001610c94929190611ba6565b604051602081830303815290604052915050919050565b6040805160608101825260008082526020820181905291810191909152610463826111d3565b6003805461050790611992565b600081815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6001600160a01b0381166000908152600560205260408120805460019290610d70908490611b93565b909155505050565b6004546000906001600160a01b03166399b38102610d9584610cab565b6040518263ffffffff1660e01b8152600401610db19190611932565b606060405180830381865afa158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df29190611c2d565b6040015192915050565b6001600160a01b038116600090815260056020526040902054610e20576002610e23565b60015b60ff1660056000836001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d709190611c97565b600080610e66836109d3565b9050806001600160a01b0316846001600160a01b03161480610ead57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b80610ed15750836001600160a01b0316610ec684610588565b6001600160a01b0316145b949350505050565b826001600160a01b0316610eec826109d3565b6001600160a01b031614610f1657604051630e92930560e11b815260006004820152602401610493565b6001600160a01b038216610f3f57604051630e92930560e11b8152600481810152602401610493565b610f4b83600083610cde565b610f5483610d47565b610f5d82610dfc565b6004546001600160a01b0316633827b48b610f7783610cab565b604080516001600160e01b031960e085901b168152825115156004820152602083015161ffff16602482015291015160448201526001600160a01b0385166064820152608401600060405180830381600087803b158015610fd757600080fd5b505af1158015610feb573d6000803e3d6000fd5b5050505080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600480546040517fafdd9edc0000000000000000000000000000000000000000000000000000000081526001600160a01b03918216928101929092526000917f00000000000000000000000000000000000000000000000000000000000000009091169063afdd9edc90602401602060405180830381865afa1580156110bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b249190611caa565b6110ee848484610ed9565b6110fa8484848461126a565b610c0457604051630e92930560e11b815260076004820152602401610493565b600061046382600001518360200151846040015161136f565b60606000611140836113c6565b600101905060008167ffffffffffffffff811115611160576111606115dc565b6040519080825280601f01601f19166020018201604052801561118a576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461119457509392505050565b604080516060810182526000808252602082018190529181019190915260f882901c60e883901c83600183111561122057604051630e92930560e11b8152600e6004820152602401610493565b6040805160608101825260ff94909416600114845261ffff9290921660208401527cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff169082015292915050565b60006001600160a01b0384163b1561136457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112ae903390899088908890600401611cc7565b6020604051808303816000875af19250505080156112e9575060408051601f3d908101601f191682019092526112e691810190611d03565b60015b61134a573d808015611317576040519150601f19603f3d011682016040523d82523d6000602084013e61131c565b606091505b50805160000361134257604051630e92930560e11b815260076004820152602401610493565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ed1565b506001949350505050565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156113b257604051630e92930560e11b8152600e6004820152602401610493565b8360f81b8360e81b01820190509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061140f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061143b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061145957662386f26fc10000830492506010015b6305f5e1008310611471576305f5e100830492506008015b612710831061148557612710830492506004015b60648310611497576064830492506002015b600a83106104635760010192915050565b6001600160e01b0319811681146114be57600080fd5b50565b6000602082840312156114d357600080fd5b8135610b13816114a8565b6000602082840312156114f057600080fd5b5035919050565b60005b838110156115125781810151838201526020016114fa565b50506000910152565b600081518084526115338160208601602086016114f7565b601f01601f19169290920160200192915050565b602081526000610b13602083018461151b565b6001600160a01b03811681146114be57600080fd5b6000806040838503121561158257600080fd5b823561158d8161155a565b946020939093013593505050565b6000806000606084860312156115b057600080fd5b83356115bb8161155a565b925060208401356115cb8161155a565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611615576116156115dc565b60405290565b600067ffffffffffffffff80841115611636576116366115dc565b604051601f8501601f19908116603f0116810190828211818310171561165e5761165e6115dc565b8160405280935085815286868601111561167757600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126116a257600080fd5b610b138383356020850161161b565b6000602082840312156116c357600080fd5b813567ffffffffffffffff8111156116da57600080fd5b610ed184828501611691565b600080600080606085870312156116fc57600080fd5b84356117078161155a565b9350602085013567ffffffffffffffff8082111561172457600080fd5b818701915087601f83011261173857600080fd5b81358181111561174757600080fd5b8860208260051b850101111561175c57600080fd5b60208301955080945050505060408501356117768161155a565b939692955090935050565b60008060006060848603121561179657600080fd5b833567ffffffffffffffff808211156117ae57600080fd5b6117ba87838801611691565b945060208601359150808211156117d057600080fd5b506117dd86828701611691565b92505060408401356117ee8161155a565b809150509250925092565b60006020828403121561180b57600080fd5b8135610b138161155a565b8035801515811461182657600080fd5b919050565b6000806040838503121561183e57600080fd5b82356118498161155a565b915061185760208401611816565b90509250929050565b6000806000806080858703121561187657600080fd5b84356118818161155a565b935060208501356118918161155a565b925060408501359150606085013567ffffffffffffffff8111156118b457600080fd5b8501601f810187136118c557600080fd5b6118d48782356020840161161b565b91505092959194509250565b6000606082840312156118f257600080fd5b6118fa6115f2565b61190383611816565b8152602083013561ffff8116811461191a57600080fd5b60208201526040928301359281019290925250919050565b81511515815260208083015161ffff16908201526040808301519082015260608101610463565b6000806040838503121561196c57600080fd5b82356119778161155a565b915060208301356119878161155a565b809150509250929050565b600181811c908216806119a657607f821691505b6020821081036105da57634e487b7160e01b600052602260045260246000fd5b601f82111561068b57600081815260208120601f850160051c810160208610156119ed5750805b601f850160051c820191505b81811015611a0c578281556001016119f9565b505050505050565b815167ffffffffffffffff811115611a2e57611a2e6115dc565b611a4281611a3c8454611992565b846119c6565b602080601f831160018114611a775760008415611a5f5750858301515b600019600386901b1c1916600185901b178555611a0c565b600085815260208120601f198616915b82811015611aa657888601518255948401946001909101908401611a87565b5085821015611ac45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611b1257611b12611aea565b5060010190565b6000604082016001600160a01b0385168352602060408185015281855180845260609350838601915082870160005b82811015611b8557611b7584835180511515825260208082015161ffff1690830152604090810151910152565b9285019290840190600101611b48565b509198975050505050505050565b8181038181111561046357610463611aea565b6000808454611bb481611992565b60018281168015611bcc5760018114611be157611c10565b60ff1984168752821515830287019450611c10565b8860005260208060002060005b85811015611c075781548a820152908401908201611bee565b50505082870194505b505050508351611c248183602088016114f7565b01949350505050565b600060608284031215611c3f57600080fd5b611c476115f2565b825167ffffffffffffffff81168114611c5f57600080fd5b8152602083015163ffffffff81168114611c7857600080fd5b60208201526040830151611c8b8161155a565b60408201529392505050565b8082018082111561046357610463611aea565b600060208284031215611cbc57600080fd5b8151610b138161155a565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611cf9608083018461151b565b9695505050505050565b600060208284031215611d1557600080fd5b8151610b13816114a856fea264697066735822122029526fbc385b2babfa856df6b2249da15364773c9aa7b73106a99e4d49ae02be64736f6c63430008110033";

type OrderNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderNFT__factory extends ContractFactory {
  constructor(...args: OrderNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    factory: string,
    canceler: string,
    overrides?: Overrides & { from?: string }
  ): Promise<OrderNFT> {
    return super.deploy(
      factory,
      canceler,
      overrides || {}
    ) as Promise<OrderNFT>;
  }
  override getDeployTransaction(
    factory: string,
    canceler: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(factory, canceler, overrides || {});
  }
  override attach(address: string): OrderNFT {
    return super.attach(address) as OrderNFT;
  }
  override connect(signer: Signer): OrderNFT__factory {
    return super.connect(signer) as OrderNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderNFTInterface {
    return new utils.Interface(_abi) as OrderNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderNFT {
    return new Contract(address, _abi, signerOrProvider) as OrderNFT;
  }
}
