/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MarketRouter,
  MarketRouterInterface,
} from "../../contracts/MarketRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "errorCode",
        type: "uint256",
      },
    ],
    name: "CloberError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "deadline",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isBid",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "priceIndex",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
            ],
            internalType: "struct OrderKey[]",
            name: "orderKeys",
            type: "tuple[]",
          },
        ],
        internalType: "struct CloberRouter.ClaimOrderParams[]",
        name: "paramsList",
        type: "tuple[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cloberMarketSwapCallback",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "isRegisteredMarket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "claimBounty",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "priceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "postOnly",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.LimitOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "limitAsk",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isBid",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "priceIndex",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
            ],
            internalType: "struct OrderKey[]",
            name: "orderKeys",
            type: "tuple[]",
          },
        ],
        internalType: "struct CloberRouter.ClaimOrderParams[]",
        name: "claimParamsList",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "claimBounty",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "priceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "postOnly",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.LimitOrderParams",
        name: "limitOrderParams",
        type: "tuple",
      },
    ],
    name: "limitAskAfterClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "claimBounty",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "priceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "postOnly",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.LimitOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "limitBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isBid",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "priceIndex",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
            ],
            internalType: "struct OrderKey[]",
            name: "orderKeys",
            type: "tuple[]",
          },
        ],
        internalType: "struct CloberRouter.ClaimOrderParams[]",
        name: "claimParamsList",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "claimBounty",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "priceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "postOnly",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.LimitOrderParams",
        name: "limitOrderParams",
        type: "tuple",
      },
    ],
    name: "limitBidAfterClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "deadline",
                type: "uint64",
              },
              {
                internalType: "uint32",
                name: "claimBounty",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint16",
                name: "priceIndex",
                type: "uint16",
              },
              {
                internalType: "uint64",
                name: "rawAmount",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "postOnly",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "useNative",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "baseAmount",
                type: "uint256",
              },
            ],
            internalType: "struct CloberRouter.LimitOrderParams",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isBid",
            type: "bool",
          },
        ],
        internalType: "struct CloberRouter.GeneralLimitOrderParams[]",
        name: "limitOrderParamsList",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isBid",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "priceIndex",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
            ],
            internalType: "struct OrderKey[]",
            name: "orderKeys",
            type: "tuple[]",
          },
        ],
        internalType: "struct CloberRouter.ClaimOrderParams[]",
        name: "claimParamsList",
        type: "tuple[]",
      },
    ],
    name: "limitOrder",
    outputs: [
      {
        internalType: "uint256[]",
        name: "orderIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "limitPriceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "expendInput",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.MarketOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "marketAsk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isBid",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "priceIndex",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
            ],
            internalType: "struct OrderKey[]",
            name: "orderKeys",
            type: "tuple[]",
          },
        ],
        internalType: "struct CloberRouter.ClaimOrderParams[]",
        name: "claimParamsList",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "limitPriceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "expendInput",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.MarketOrderParams",
        name: "marketOrderParams",
        type: "tuple",
      },
    ],
    name: "marketAskAfterClaim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "limitPriceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "expendInput",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.MarketOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "marketBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isBid",
                type: "bool",
              },
              {
                internalType: "uint16",
                name: "priceIndex",
                type: "uint16",
              },
              {
                internalType: "uint256",
                name: "orderIndex",
                type: "uint256",
              },
            ],
            internalType: "struct OrderKey[]",
            name: "orderKeys",
            type: "tuple[]",
          },
        ],
        internalType: "struct CloberRouter.ClaimOrderParams[]",
        name: "claimParamsList",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "limitPriceIndex",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "rawAmount",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "expendInput",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "useNative",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "baseAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CloberRouter.MarketOrderParams",
        name: "marketOrderParams",
        type: "tuple",
      },
    ],
    name: "marketBidAfterClaim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "registerMarkets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "unregisterMarkets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051611aa6380380611aa683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611a0d6100996000396000818161044a015281816109020152610a9f0152611a0d6000f3fe6080604052600436106100dd5760003560e01c80638c15d6081161007f578063be37473311610059578063be37473314610212578063ccfc859014610225578063ce47407714610245578063fd235fda1461025857600080fd5b80638c15d608146101d9578063b75f767e146101ec578063bd9fadd0146101ff57600080fd5b80634a58e49e116100bb5780634a58e49e1461013d578063611960fd1461018657806379ae02f8146101a65780638806f1de146101b957600080fd5b80630a549f15146100e257806310077cdd14610104578063361dcc2e14610117575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046112f0565b61026b565b005b610102610112366004611356565b6102fe565b61012a610125366004611386565b61039a565b6040519081526020015b60405180910390f35b34801561014957600080fd5b506101766101583660046113f1565b6001600160a01b031660009081526020819052604090205460ff1690565b6040519015158152602001610134565b34801561019257600080fd5b506101026101a1366004611415565b610448565b61012a6101b4366004611386565b61056d565b6101cc6101c7366004611457565b61059d565b60405161013491906114f2565b61012a6101e7366004611536565b6107de565b6101026101fa366004611356565b610880565b61010261020d366004611553565b6108a4565b610102610220366004611553565b6108d2565b34801561023157600080fd5b50610102610240366004611415565b610900565b61012a610253366004611536565b610a25565b6101026102663660046115a0565b610a4b565b8261027581610c8b565b61027f8383610cbc565b47156102f857604051600090339047908381818185875af1925050503d80600081146102c7576040519150601f19603f3d011682016040523d82523d6000602084013e6102cc565b606091505b50509050806102f657604051630e92930560e11b8152600160048201526024015b60405180910390fd5b505b50505050565b61030e604082016020830161164a565b61031781610c8b565b610322826000610d79565b471561039657604051600090339047908381818185875af1925050503d806000811461036a576040519150601f19603f3d011682016040523d82523d6000602084013e61036f565b606091505b505090508061039457604051630e92930560e11b8152600160048201526024016102ed565b505b5050565b60006103ac604083016020840161164a565b6103b581610c8b565b6103bf8585610cbc565b6103ca836000610e9c565b9150471561044057604051600090339047908381818185875af1925050503d8060008114610414576040519150601f19603f3d011682016040523d82523d6000602084013e610419565b606091505b505090508061043e57604051630e92930560e11b8152600160048201526024016102ed565b505b509392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190611665565b6001600160a01b0316336001600160a01b0316146104fe57604051630e92930560e11b8152600060048201526024016102ed565b60005b8181101561039457600160008085858581811061052057610520611682565b905060200201602081019061053591906113f1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055610566816116ae565b9050610501565b600061057f604083016020840161164a565b61058881610c8b565b6105928585610cbc565b6103ca836001610e9c565b60608367ffffffffffffffff8111156105b8576105b86116c7565b6040519080825280602002602001820160405280156105e1578160200160208202803683370190505b5090506105ee8383610cbc565b6000805b8581101561068a5761062e87878381811061060f5761060f611682565b61062992604061014090920201908101915060200161164a565b610c8b565b86868281811061064057610640611682565b61065a9260606101409092020190810191506040016116dd565b61066e9063ffffffff16633b9aca00611703565b610678908361171a565b9150610683816116ae565b90506105f2565b5060005b85811015610760578686828181106106a8576106a8611682565b6106c29260606101409092020190810191506040016116dd565b6106d69063ffffffff16633b9aca00611703565b6106e0908361172d565b91506107338787838181106106f7576106f7611682565b9050610140020160000188888481811061071357610713611682565b9050610140020161012001602081019061072d919061174e565b84610eb3565b83828151811061074557610745611682565b6020908102919091010152610759816116ae565b905061068e565b505047156107d657604051600090339047908381818185875af1925050503d80600081146107aa576040519150601f19603f3d011682016040523d82523d6000602084013e6107af565b606091505b50509050806107d457604051630e92930560e11b8152600160048201526024016102ed565b505b949350505050565b60006107f0604083016020840161164a565b6107f981610c8b565b610804836001610e9c565b9150471561087a57604051600090339047908381818185875af1925050503d806000811461084e576040519150601f19603f3d011682016040523d82523d6000602084013e610853565b606091505b505090508061087857604051630e92930560e11b8152600160048201526024016102ed565b505b50919050565b610890604082016020830161164a565b61089981610c8b565b610322826001610d79565b6108b4604082016020830161164a565b6108bd81610c8b565b6108c78484610cbc565b61027f826001610d79565b6108e2604082016020830161164a565b6108eb81610c8b565b6108f58484610cbc565b61027f826000610d79565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190611665565b6001600160a01b0316336001600160a01b0316146109b657604051630e92930560e11b8152600060048201526024016102ed565b60005b818110156103945760008060008585858181106109d8576109d8611682565b90506020020160208101906109ed91906113f1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055610a1e816116ae565b90506109b9565b6000610a37604083016020840161164a565b610a4081610c8b565b610804836000610e9c565b3360009081526020819052604090205460ff16158015610b1557506040517fafdd9edc0000000000000000000000000000000000000000000000000000000081523360048201526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063afdd9edc90602401602060405180830381865afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190611665565b6001600160a01b0316145b15610b3657604051630e92930560e11b8152600060048201526024016102ed565b60008080610b468486018661176b565b9250925092508115610c65576000610b5e824761172d565b9050878111610b7757610b71818961172d565b81610b7b565b6000885b8092508199505050896001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610bbe57600080fd5b505af1158015610bd2573d6000803e3d6000fd5b50506040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b038e16935063a9059cbb925060440190506020604051808303816000875af1158015610c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6291906117ac565b50505b8615610c8057610c806001600160a01b038a1684338a61100b565b505050505050505050565b8067ffffffffffffffff16421115610cb957604051630e92930560e11b8152600660048201526024016102ed565b50565b60005b818110156103945736838383818110610cda57610cda611682565b9050602002810190610cec91906117c9565b9050610cfb60208201826113f1565b6001600160a01b03166375375e9633610d1760208501856117e9565b6040518463ffffffff1660e01b8152600401610d3593929190611844565b600060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b505050505080610d72906116ae565b9050610cbf565b610d8660208301836113f1565b6001600160a01b031663b46d4ce8610da460608501604086016113f1565b610db460808601606087016118be565b610dc460a087016080880161164a565b60e0870135610dd960c0890160a08a0161174e565b610de4576000610de7565b60025b87610df3576000610df6565b60015b610e0091906118d9565b33610e1160e08b0160c08c0161174e565b604080516001600160a01b03909316602084015290151590820152600060608201526080016040516020818303038152906040526040518763ffffffff1660e01b8152600401610e6696959493929190611942565b600060405180830381600087803b158015610e8057600080fd5b505af1158015610e94573d6000803e3d6000fd5b505050505050565b6000610eaa83836000610eb3565b90505b92915050565b6000610ec260208501856113f1565b6001600160a01b031663bfc18aef610ee060608701604088016116dd565b610ef49063ffffffff16633b9aca00611703565b610f0460808801606089016113f1565b610f1460a0890160808a016118be565b610f2460c08a0160a08b0161164a565b6101008a0135610f3a60e08c0160c08d0161174e565b610f45576000610f48565b60025b8a610f54576000610f57565b60015b610f6191906118d9565b33610f736101008e0160e08f0161174e565b604080516001600160a01b03909316602084015290151590820152606081018b90526080016040516020818303038152906040526040518863ffffffff1660e01b8152600401610fc896959493929190611942565b60206040518083038185885af1158015610fe6573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906107d69190611999565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526102f8928792916000916110d1918516908490611164565b90508051600014806110f25750808060200190518101906110f291906117ac565b6103945760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102ed565b60606107d6848460008585600080866001600160a01b0316858760405161118b91906119b2565b60006040518083038185875af1925050503d80600081146111c8576040519150601f19603f3d011682016040523d82523d6000602084013e6111cd565b606091505b50915091506111de878383876111e9565b979650505050505050565b60608315611258578251600003611251576001600160a01b0385163b6112515760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ed565b50816107d6565b6107d6838381511561126d5781518083602001fd5b8060405162461bcd60e51b81526004016102ed91906119c4565b803567ffffffffffffffff8116811461129f57600080fd5b919050565b60008083601f8401126112b657600080fd5b50813567ffffffffffffffff8111156112ce57600080fd5b6020830191508360208260051b85010111156112e957600080fd5b9250929050565b60008060006040848603121561130557600080fd5b61130e84611287565b9250602084013567ffffffffffffffff81111561132a57600080fd5b611336868287016112a4565b9497909650939450505050565b6000610100828403121561087a57600080fd5b6000610100828403121561136957600080fd5b610eaa8383611343565b6000610120828403121561087a57600080fd5b6000806000610140848603121561139c57600080fd5b833567ffffffffffffffff8111156113b357600080fd5b6113bf868287016112a4565b90945092506113d390508560208601611373565b90509250925092565b6001600160a01b0381168114610cb957600080fd5b60006020828403121561140357600080fd5b813561140e816113dc565b9392505050565b6000806020838503121561142857600080fd5b823567ffffffffffffffff81111561143f57600080fd5b61144b858286016112a4565b90969095509350505050565b6000806000806040858703121561146d57600080fd5b843567ffffffffffffffff8082111561148557600080fd5b818701915087601f83011261149957600080fd5b8135818111156114a857600080fd5b886020610140830285010111156114be57600080fd5b6020928301965094509086013590808211156114d957600080fd5b506114e6878288016112a4565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561152a5783518352928401929184019160010161150e565b50909695505050505050565b6000610120828403121561154957600080fd5b610eaa8383611373565b6000806000610120848603121561156957600080fd5b833567ffffffffffffffff81111561158057600080fd5b61158c868287016112a4565b90945092506113d390508560208601611343565b60008060008060008060a087890312156115b957600080fd5b86356115c4816113dc565b955060208701356115d4816113dc565b94506040870135935060608701359250608087013567ffffffffffffffff808211156115ff57600080fd5b818901915089601f83011261161357600080fd5b81358181111561162257600080fd5b8a602082850101111561163457600080fd5b6020830194508093505050509295509295509295565b60006020828403121561165c57600080fd5b610eaa82611287565b60006020828403121561167757600080fd5b815161140e816113dc565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116c0576116c0611698565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116ef57600080fd5b813563ffffffff8116811461140e57600080fd5b8082028115828204841417610ead57610ead611698565b80820180821115610ead57610ead611698565b81810381811115610ead57610ead611698565b8015158114610cb957600080fd5b60006020828403121561176057600080fd5b813561140e81611740565b60008060006060848603121561178057600080fd5b833561178b816113dc565b9250602084013561179b81611740565b929592945050506040919091013590565b6000602082840312156117be57600080fd5b815161140e81611740565b60008235603e198336030181126117df57600080fd5b9190910192915050565b6000808335601e1984360301811261180057600080fd5b83018035915067ffffffffffffffff82111561181b57600080fd5b60200191506060810236038213156112e957600080fd5b803561ffff8116811461129f57600080fd5b6001600160a01b0384168152604060208083018290528282018490526000919060609081850187855b888110156118af57813561188081611740565b1515835261ffff611892838601611832565b16838501528186013586840152918401919084019060010161186d565b50909998505050505050505050565b6000602082840312156118d057600080fd5b610eaa82611832565b60ff8181168382160190811115610ead57610ead611698565b60005b8381101561190d5781810151838201526020016118f5565b50506000910152565b6000815180845261192e8160208601602086016118f2565b601f01601f19169290920160200192915050565b6001600160a01b038716815261ffff8616602082015267ffffffffffffffff8516604082015283606082015260ff8316608082015260c060a0820152600061198d60c0830184611916565b98975050505050505050565b6000602082840312156119ab57600080fd5b5051919050565b600082516117df8184602087016118f2565b602081526000610eaa602083018461191656fea264697066735822122017281249370732fe4ec6a8f14d420b30f7bd737d2ab439c84fb559ea3f8f4f5e64736f6c63430008110033";

type MarketRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketRouter__factory extends ContractFactory {
  constructor(...args: MarketRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    factory: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MarketRouter> {
    return super.deploy(factory, overrides || {}) as Promise<MarketRouter>;
  }
  override getDeployTransaction(
    factory: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(factory, overrides || {});
  }
  override attach(address: string): MarketRouter {
    return super.attach(address) as MarketRouter;
  }
  override connect(signer: Signer): MarketRouter__factory {
    return super.connect(signer) as MarketRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketRouterInterface {
    return new utils.Interface(_abi) as MarketRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketRouter {
    return new Contract(address, _abi, signerOrProvider) as MarketRouter;
  }
}
