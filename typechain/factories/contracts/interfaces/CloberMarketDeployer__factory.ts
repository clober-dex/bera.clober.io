/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  CloberMarketDeployer,
  CloberMarketDeployerInterface,
} from "../../../contracts/interfaces/CloberMarketDeployer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "Deploy",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "orderToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint96",
        name: "quoteUnit",
        type: "uint96",
      },
      {
        internalType: "int24",
        name: "makerFee",
        type: "int24",
      },
      {
        internalType: "uint24",
        name: "takerFee",
        type: "uint24",
      },
      {
        internalType: "address",
        name: "priceBook",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class CloberMarketDeployer__factory {
  static readonly abi = _abi;
  static createInterface(): CloberMarketDeployerInterface {
    return new utils.Interface(_abi) as CloberMarketDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CloberMarketDeployer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CloberMarketDeployer;
  }
}
